---
name: Deploy Nginx Proxy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set permissions for scripts
        run: |
          chmod +x scripts/deploy.sh
          chmod +x scripts/get-certificates.sh
          ls -la scripts/
      
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
      
      - name: Create archive
        run: |
          mkdir -p /tmp/nginx-proxy-build
          tar -czf /tmp/nginx-proxy-build/nginx-proxy.tar.gz --exclude=".git" --exclude=".github" --exclude="certbot" --exclude=".cursor" .
          ls -lh /tmp/nginx-proxy-build/nginx-proxy.tar.gz
          cp /tmp/nginx-proxy-build/nginx-proxy.tar.gz .
      
      - name: Deploy to server
        run: |
          scp nginx-proxy.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/tmp/
          
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            if [ -d ~/nginx-proxy ]; then
              cd ~/nginx-proxy && docker-compose down -v || true;
              docker rm -f \$(docker ps -aq -f name=nginx-proxy) 2>/dev/null || true;
            fi;
            
            rm -rf ~/nginx-proxy/*;
            mkdir -p ~/nginx-proxy;
            tar -xzf /tmp/nginx-proxy.tar.gz -C ~/nginx-proxy;
            chmod +x ~/nginx-proxy/scripts/deploy.sh;
            chmod +x ~/nginx-proxy/scripts/get-certificates.sh;
            
            cd ~/nginx-proxy;
            echo 'Создание файла окружения...';
            touch .env;
            echo DOMAINS='${{ secrets.DOMAINS }}' > .env;
            echo SERVER_IP='${{ secrets.SERVER_IP }}' >> .env;
            echo ENABLE_SSL='${{ secrets.ENABLE_SSL }}' >> .env;
            echo EMAIL_FOR_SSL='${{ secrets.EMAIL_FOR_SSL }}' >> .env;
            echo NOTIFY_EMAIL='${{ secrets.NOTIFY_EMAIL }}' >> .env;
            echo COMPOSE_PROJECT_NAME='nginx-proxy' >> .env;
            cat .env;
            
            export DOMAINS='${{ secrets.DOMAINS }}';
            export SERVER_IP='${{ secrets.SERVER_IP }}';
            export ENABLE_SSL='${{ secrets.ENABLE_SSL }}';
            export EMAIL_FOR_SSL='${{ secrets.EMAIL_FOR_SSL }}';
            export NOTIFY_EMAIL='${{ secrets.NOTIFY_EMAIL }}';
            export COMPOSE_PROJECT_NAME='nginx-proxy';
            
            # Убеждаемся, что порт 443 открыт в firewall
            if [ '${{ secrets.ENABLE_SSL }}' = 'true' ]; then
              echo 'Проверка и настройка файрвола для SSL (порт 443)...';
              if command -v ufw &> /dev/null; then
                sudo ufw status | grep -q '443/tcp' || sudo ufw allow 443/tcp;
              elif command -v firewall-cmd &> /dev/null; then
                sudo firewall-cmd --permanent --add-port=443/tcp;
                sudo firewall-cmd --reload;
              fi
            fi;
            
            bash -x ./scripts/deploy.sh;
          "